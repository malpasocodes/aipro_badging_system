"""Add awards table for earned badges

Revision ID: 2bfe54925752
Revises: 4a5be144caf5
Create Date: 2025-10-01 12:08:54.831929

"""
from collections.abc import Sequence

import sqlalchemy as sa
import sqlmodel

from alembic import op

# revision identifiers, used by Alembic.
revision: str = '2bfe54925752'
down_revision: str | Sequence[str] | None = '4a5be144caf5'
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('awards',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('award_type', sa.Enum('MINI_BADGE', 'SKILL', 'PROGRAM', name='awardtype'), nullable=False),
    sa.Column('mini_badge_id', sa.Uuid(), nullable=True),
    sa.Column('skill_id', sa.Uuid(), nullable=True),
    sa.Column('program_id', sa.Uuid(), nullable=True),
    sa.Column('request_id', sa.Uuid(), nullable=True),
    sa.Column('awarded_at', sa.DateTime(), nullable=False),
    sa.Column('awarded_by', sa.Uuid(), nullable=True),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['awarded_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['mini_badge_id'], ['mini_badges.id'], ),
    sa.ForeignKeyConstraint(['program_id'], ['programs.id'], ),
    sa.ForeignKeyConstraint(['request_id'], ['requests.id'], ),
    sa.ForeignKeyConstraint(['skill_id'], ['skills.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'mini_badge_id', name='uq_user_mini_badge'),
    sa.UniqueConstraint('user_id', 'program_id', name='uq_user_program'),
    sa.UniqueConstraint('user_id', 'skill_id', name='uq_user_skill')
    )
    op.create_index(op.f('ix_awards_award_type'), 'awards', ['award_type'], unique=False)
    op.create_index(op.f('ix_awards_awarded_at'), 'awards', ['awarded_at'], unique=False)
    op.create_index(op.f('ix_awards_mini_badge_id'), 'awards', ['mini_badge_id'], unique=False)
    op.create_index(op.f('ix_awards_program_id'), 'awards', ['program_id'], unique=False)
    op.create_index(op.f('ix_awards_skill_id'), 'awards', ['skill_id'], unique=False)
    op.create_index(op.f('ix_awards_user_id'), 'awards', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_awards_user_id'), table_name='awards')
    op.drop_index(op.f('ix_awards_skill_id'), table_name='awards')
    op.drop_index(op.f('ix_awards_program_id'), table_name='awards')
    op.drop_index(op.f('ix_awards_mini_badge_id'), table_name='awards')
    op.drop_index(op.f('ix_awards_awarded_at'), table_name='awards')
    op.drop_index(op.f('ix_awards_award_type'), table_name='awards')
    op.drop_table('awards')
    # ### end Alembic commands ###
