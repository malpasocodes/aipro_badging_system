"""add progress badges

Revision ID: 616641e523e9
Revises: 2bfe54925752
Create Date: 2025-10-05 17:49:11.920723

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '616641e523e9'
down_revision: Union[str, Sequence[str], None] = '2bfe54925752'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('progress_badges',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('program_id', sa.Uuid(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('icon', sqlmodel.sql.sqltypes.AutoString(length=32), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['program_id'], ['programs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_progress_badges_is_active'), 'progress_badges', ['is_active'], unique=False)
    op.create_index(op.f('ix_progress_badges_program_id'), 'progress_badges', ['program_id'], unique=False)
    op.add_column('awards', sa.Column('progress_badge_id', sa.Uuid(), nullable=True))
    op.alter_column('awards', 'award_type',
               existing_type=sa.VARCHAR(length=10),
               type_=sa.Enum('MINI_BADGE', 'SKILL', 'PROGRAM', 'PROGRESS_BADGE', name='awardtype'),
               existing_nullable=False)
    op.create_index(op.f('ix_awards_progress_badge_id'), 'awards', ['progress_badge_id'], unique=False)
    op.create_unique_constraint('uq_user_progress_badge', 'awards', ['user_id', 'progress_badge_id'])
    op.create_foreign_key(None, 'awards', 'progress_badges', ['progress_badge_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'awards', type_='foreignkey')
    op.drop_constraint('uq_user_progress_badge', 'awards', type_='unique')
    op.drop_index(op.f('ix_awards_progress_badge_id'), table_name='awards')
    op.alter_column('awards', 'award_type',
               existing_type=sa.Enum('MINI_BADGE', 'SKILL', 'PROGRAM', 'PROGRESS_BADGE', name='awardtype'),
               type_=sa.VARCHAR(length=10),
               existing_nullable=False)
    op.drop_column('awards', 'progress_badge_id')
    op.drop_index(op.f('ix_progress_badges_program_id'), table_name='progress_badges')
    op.drop_index(op.f('ix_progress_badges_is_active'), table_name='progress_badges')
    op.drop_table('progress_badges')
    # ### end Alembic commands ###
