name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        uv sync --frozen --extra dev

    - name: Lint with ruff
      run: |
        uv run ruff check .
        uv run ruff format --check .

    - name: Type check with mypy
      run: |
        uv run mypy app/

    - name: Test with pytest
      run: |
        uv run coverage run -m pytest tests/ -v

    - name: Generate coverage report
      run: |
        uv run coverage report
        uv run coverage xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

    - name: Security check with safety
      run: |
        uv run safety check --json || true

    - name: Check for vulnerabilities in dependencies
      run: |
        uv run pip-audit --format=json --output=audit-results.json || true

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Set up Python
      run: uv python install 3.11

    - name: Install dependencies
      run: |
        uv sync --frozen

    - name: Test application startup
      run: |
        timeout 30s uv run streamlit run app/main.py --server.headless true --server.port 8501 &
        sleep 10
        curl -f http://localhost:8501/?health || exit 1
        echo "Application health check passed"